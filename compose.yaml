include:
  - compose.monitoring.yaml

services:
  mariadb:
    image: mariadb:latest
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: on-failure
    environment:
      MARIADB_ROOT_PASSWORD: root
      MARIADB_DATABASE: crypto
      MARIADB_USER: db_user_123
      MARIADB_PASSWORD: db_pass_123
    volumes:
      - ./data/mariadb:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mariadb", "--user=root", "--password=root", "--execute=SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api:
    build:
      dockerfile: docker/frankenphp/Dockerfile
      context: .
      target: dev
    restart: on-failure
    ports:
      - "80:80"
    volumes:
      - .:/app
    env_file:
      - .env.dev
    networks:
      - app-network
    depends_on:
      mariadb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: >
      sh -c "
        echo 'Running composer install...' &&
        composer install &&
        echo 'Waiting for database to be ready...' &&
        php bin/console doctrine:database:create --if-not-exists &&
        php bin/console doctrine:migrations:migrate --no-interaction &&
        echo 'Migrations completed. Starting server...' &&
        frankenphp run --config docker/frankenphp/Caddyfile.dev
      "

  scheduler:
    build:
      dockerfile: docker/frankenphp/Dockerfile
      context: .
      target: dev
    restart: on-failure
    volumes:
      - .:/app
    env_file:
      - .env.dev
    environment:
      OTEL_SERVICE_NAME: crypto-rates-scheduler
    networks:
      - app-network
    depends_on:
      mariadb:
        condition: service_healthy
      api:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for API service to be ready...' &&
        sleep 10 &&
        echo 'Starting scheduler worker...' &&
        php bin/console messenger:consume scheduler_default -vv
      "

networks:
  app-network:
    driver: bridge
