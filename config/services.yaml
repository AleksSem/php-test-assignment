# Service configuration for Crypto Rates API
# Files in the packages/ subdirectory configure your dependencies.

imports:
    - { resource: default_env.yaml }
    - { resource: parameters.yaml }

services:
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            # Application parameters
            $appName: '%app.name%'
            $appVersion: '%app.version%'
            $httpDurationBuckets: '%app.http_duration_buckets%'
            $sqlDurationBuckets: '%app.sql_duration_buckets%'
            $binanceApiUrl: '%app.binance_api_url%'
            $binanceKlinesUrl: '%app.binance_klines_url%'
            $supportedPairs: '%app.supported_pairs%'
            $monitoringSkipUrls: '%app.monitoring_skip_urls%'
            $binanceApiTimeout: '%app.binance_api_timeout%'
            $binanceKlinesTimeout: '%app.binance_klines_timeout%'
            $binanceKlinesLimit: '%app.binance_klines_limit%'
            $chartBorderColor: '%app.chart_border_color%'
            $chartBackgroundColor: '%app.chart_background_color%'

    # Auto-register services from src/ directory
    App\:
        resource: '../src/'

    App\Service\BinanceApiClientService:
        arguments:
            $httpClient: '@App\Service\TracingHttpClient'

    App\Service\TracingHttpClient:
        arguments:
            $httpClient: '@http_client'

    App\Service\OpenTelemetryService:
        arguments:
            $serviceName: '%otel.service_name%'
            $serviceVersion: '%otel.service_version%'
            $tracesEndpoint: '%otel.exporter_traces_endpoint%'
            $metricsEndpoint: '%otel.exporter_metrics_endpoint%'
            $environment: '%app.environment%'

    App\Tracing\SqlTracingMiddleware:
        tags:
            - { name: 'doctrine.middleware' }

    App\Metrics\SqlMetricsMiddleware:
        tags:
            - { name: 'doctrine.middleware' }

    App\Log\GelfProcessor:
        arguments:
            $serviceName: '%otel.service_name%'
            $environment: '%app.environment%'
        tags:
            - { name: monolog.processor }

    # Prometheus Configuration
    Prometheus\Storage\InMemory:

    Prometheus\CollectorRegistry:
        arguments:
            - '@Prometheus\Storage\InMemory'
